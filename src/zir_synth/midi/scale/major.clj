(ns zir-synth.midi.scale.major
  (:gen-class))

(defn- major-semi-notes [] [2 2 1 2 2 2 1])
(defn- major-scale [] (reduce + 0 (major-semi-notes)))
(defn- major-steps [] [:T :T :S :T :T :T :S])

(defn c-major [] [:C :D :E :F :G :A :B :C])
(defn c-sharp-major [] [:C# :D# :E# :F# :G# :A# :B# :C#])
(defn d-flat-major [] [:Db :Eb :F :Gb :Ab :Bb :C :Db])
(defn d-major [] [:D :E :F# :G :A :B :C# :D])
(defn d-sharp-major [] [:D# :E# :F## :G# :A# :B#, :C## :D#])
(defn e-flat-major [] [:Eb :F :G :Ab :Bb :C :D :Eb])
(defn e-major [] [:E :F# :G# :A :B :C# :D# :E])
(defn f-major [] [:F :G :A :Bb :C :D :E :F])
(defn f-sharp-major [] [:F# :G# :A# :B :C# :D# :F :F#])
(defn g-flat-major [] [:Gb :Ab :Bb :Cb :Db :Eb :F :Gb])
(defn g-major [] [:G :A :B :C :D :E :F# :G])
(defn g-sharp-major [] [:G# :A# :B# :C# :D# :E# :F## :G#])
(defn a-flat-major [] [:Ab :Bb :C :Db :Eb :F :G :Ab])
(defn a-major [] [:A :B :C# :D :E :F# :G# :A])
(defn a-sharp-major [] [:A# :B# :C## :D# :E# :F## :G## :A#])
(defn b-flat-major [] [:Bb :C :D :Eb :F :G :A :Bb])
(defn b-major [] [:B :C# :D# :E :F# :G# :A# :B])

(defn- majors [] [(c-major) (c-sharp-major) (d-flat-major)
                  (d-major) (d-sharp-major) (e-flat-major)
                  (e-major)
                  (f-major) (f-sharp-major) (g-flat-major)
                  (g-major) (g-sharp-major) (a-flat-major)
                  (a-major) (a-sharp-major) (b-flat-major)
                  (b-major)])

(defn scale [key-note] (first (filter (fn [scale] (= key-note (first scale))) (majors))))
